warning: skipping duplicate package `app` found at `/Users/brendonovich/.cargo/git/checkouts/tauri-ebcd7d3c986d3f32/b21feeb/examples/web/core/tauri`
warning: skipping duplicate package `api` found at `/Users/brendonovich/.cargo/git/checkouts/tauri-ebcd7d3c986d3f32/b21feeb/examples/api/src-tauri`
   Compiling specta-macros v0.0.4 (/Users/brendonovich/github.com/oscartbeaumont/rspc/crates/specta/macros)
   Compiling specta v0.0.4 (/Users/brendonovich/github.com/oscartbeaumont/rspc/crates/specta)
warning: associated function `stripped` is never used
  --> crates/specta/src/datatype.rs:30:19
   |
30 |     pub(crate) fn stripped(mut self) -> DataType {
   |                   ^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: missing documentation for a module
  --> crates/specta/src/lib.rs:84:1
   |
84 | pub mod export;
   | ^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> crates/specta/src/lib.rs:48:58
   |
48 | #![warn(clippy::all, clippy::unwrap_used, clippy::panic, missing_docs)]
   |                                                          ^^^^^^^^^^^^

warning: missing documentation for a struct
 --> crates/specta/src/export.rs:6:1
  |
6 | / lazy_static! {
7 | |     pub static ref TYPES: Mutex<BTreeMap<&'static str, DataType>> = Mutex::new(Default::default());
8 | | }
  | |_^
  |
  = note: this warning originates in the macro `lazy_static` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: missing documentation for an associated function
   --> crates/specta/src/lib.rs:187:5
    |
187 |     fn reference_and_register(opts: DefOpts, generics: &[DataType]) -> DataType {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> crates/specta/src/lib.rs:199:5
    |
199 |     fn placeholder() -> Option<DataType> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> crates/specta/src/lib.rs:203:5
    |
203 |     fn register(opts: DefOpts) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `specta` (lib test) generated 1 warning
warning: `specta` (lib) generated 6 warnings (1 duplicate)
warning: unused import: `serde::Serialize`
 --> crates/specta/tests/fail.rs:1:5
  |
1 | use serde::Serialize;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `specta::Type`
 --> crates/specta/tests/fail.rs:2:5
  |
2 | use specta::Type;
  |     ^^^^^^^^^^^^

warning: `specta` (test "fail") generated 2 warnings
warning: type `enum` should have an upper camel case name
 --> crates/specta/tests/ts_rs/raw_idents.rs:4:8
  |
4 | struct r#enum {
  |        ^^^^^^ help: convert the identifier to upper camel case: `Enum`
  |
  = note: `#[warn(non_camel_case_types)]` on by default

warning: fields `a` and `b` are never read
 --> crates/specta/tests/ts_rs/field_rename.rs:5:5
  |
4 | struct Rename {
  |        ------ fields in this struct
5 |     a: i32,
  |     ^
6 |     #[specta(rename = "bb")]
7 |     b: i32,
  |     ^
  |
  = note: `#[warn(dead_code)]` on by default

warning: fields `a` and `b` are never read
 --> crates/specta/tests/ts_rs/flatten.rs:5:5
  |
4 | struct A {
  |        - fields in this struct
5 |     a: i32,
  |     ^
6 |     b: i32,
  |     ^

warning: fields `a` and `c` are never read
  --> crates/specta/tests/ts_rs/flatten.rs:12:5
   |
10 | struct B {
   |        - fields in this struct
11 |     #[specta(flatten)]
12 |     a: A,
   |     ^
13 |     c: i32,
   |     ^

warning: fields `b` and `d` are never read
  --> crates/specta/tests/ts_rs/flatten.rs:19:5
   |
17 | struct C {
   |        - fields in this struct
18 |     #[specta(inline)]
19 |     b: B,
   |     ^
20 |     d: i32,
   |     ^

warning: fields `x1` and `y1` are never read
 --> crates/specta/tests/ts_rs/nested.rs:7:5
  |
6 | struct A {
  |        - fields in this struct
7 |     x1: Arc<i32>,
  |     ^^
8 |     y1: Cell<i32>,
  |     ^^

warning: fields `a1` and `a2` are never read
  --> crates/specta/tests/ts_rs/nested.rs:13:5
   |
12 | struct B {
   |        - fields in this struct
13 |     a1: Box<A>,
   |     ^^
14 |     #[specta(inline)]
15 |     a2: A,
   |     ^^

warning: fields `b1` and `b2` are never read
  --> crates/specta/tests/ts_rs/nested.rs:20:5
   |
19 | struct C {
   |        - fields in this struct
20 |     b1: Rc<B>,
   |     ^^
21 |     #[specta(inline)]
22 |     b2: B,
   |     ^^

warning: fields `a` and `b` are never read
 --> crates/specta/tests/ts_rs/optional_field.rs:6:5
  |
4 | struct Optional {
  |        -------- fields in this struct
5 |     #[specta(optional)]
6 |     a: Option<i32>,
  |     ^
7 |     #[serde(skip_serializing_if = "Option::is_none")]
8 |     b: Option<String>,
  |     ^

warning: fields `type`, `use`, `struct`, `let` and `enum` are never read
 --> crates/specta/tests/ts_rs/raw_idents.rs:5:5
  |
4 | struct r#enum {
  |        ------ fields in this struct
5 |     r#type: i32,
  |     ^^^^^^
6 |     r#use: i32,
  |     ^^^^^
7 |     r#struct: i32,
  |     ^^^^^^^^
8 |     r#let: i32,
  |     ^^^^^
9 |     r#enum: i32,
  |     ^^^^^^

warning: fields `a`, `b`, `c`, `d` and `e` are never read
  --> crates/specta/tests/ts_rs/simple.rs:7:5
   |
6  | struct Simple {
   |        ------ fields in this struct
7  |     a: i32,
   |     ^
8  |     b: String,
   |     ^
9  |     c: (i32, String, RefCell<i32>),
   |     ^
10 |     d: Vec<String>,
   |     ^
11 |     e: Option<String>,
   |     ^

warning: fields `a`, `b` and `c` are never read
 --> crates/specta/tests/ts_rs/skip.rs:5:5
  |
4 | struct Skip {
  |        ---- fields in this struct
5 |     a: i32,
  |     ^
6 |     b: i32,
  |     ^
7 |     #[specta(skip)]
8 |     c: String,
  |     ^

warning: fields `a` and `b` are never read
 --> crates/specta/tests/ts_rs/struct_rename.rs:8:9
  |
7 |     struct Rename {
  |            ------ fields in this struct
8 |         a: i32,
  |         ^
9 |         b: i32,
  |         ^

warning: fields `a` and `b` are never read
 --> crates/specta/tests/ts_rs/struct_tag.rs:6:5
  |
5 | struct TaggedType {
  |        ---------- fields in this struct
6 |     a: i32,
  |     ^
7 |     b: i32,
  |     ^

warning: variants `A`, `B` and `C` are never constructed
  --> crates/specta/tests/ts_rs/union.rs:9:5
   |
7  | enum SimpleEnum {
   |      ---------- variants in this enum
8  |     #[specta(rename = "asdf")]
9  |     A,
   |     ^
10 |     B,
   |     ^
11 |     #[specta(rename_all = "camelCase")]
12 |     C {
   |     ^

warning: variants `A`, `B` and `C` are never constructed
  --> crates/specta/tests/ts_rs/union_rename.rs:8:5
   |
6  | enum RenamedEnum {
   |      ----------- variants in this enum
7  |     #[specta(rename = "ASDF")]
8  |     A,
   |     ^
9  |     B,
   |     ^
10 |     C,
   |     ^

warning: function `test_simple_enum` is never used
  --> crates/specta/tests/ts_rs/union_rename.rs:14:4
   |
14 | fn test_simple_enum() {
   |    ^^^^^^^^^^^^^^^^

warning: variants `A` and `B` are never constructed
 --> crates/specta/tests/ts_rs/union_serde.rs:6:5
  |
5 | enum SimpleEnum {
  |      ---------- variants in this enum
6 |     A,
  |     ^
7 |     B,
  |     ^

warning: variants `A`, `B`, `W`, `F` and `T` are never constructed
  --> crates/specta/tests/ts_rs/union_serde.rs:13:5
   |
12 | enum ComplexEnum {
   |      ----------- variants in this enum
13 |     A,
   |     ^
14 |     B { foo: String, bar: f64 },
   |     ^
15 |     W(SimpleEnum),
   |     ^
16 |     F { nested: SimpleEnum },
   |     ^
17 |     T(i32, SimpleEnum),
   |     ^

warning: variants `Foo`, `Bar` and `None` are never constructed
  --> crates/specta/tests/ts_rs/union_serde.rs:23:5
   |
22 | enum Untagged {
   |      -------- variants in this enum
23 |     Foo(String),
   |     ^^^
24 |     Bar(i32),
   |     ^^^
25 |     None,
   |     ^^^^

warning: variants `A`, `B`, `C`, `D`, `E` and `F` are never constructed
  --> crates/specta/tests/ts_rs/union_with_data.rs:16:5
   |
15 | enum SimpleEnum {
   |      ---------- variants in this enum
16 |     A(String),
   |     ^
17 |     B(i32),
   |     ^
18 |     C,
   |     ^
19 |     D(String, i32),
   |     ^
20 |     E(Foo),
   |     ^
21 |     F { a: i32, b: String },
   |     ^

warning: variants `A` and `B` are never constructed
 --> crates/specta/tests/ts_rs/union_with_internal_tag.rs:6:5
  |
5 | enum EnumWithInternalTag {
  |      ------------------- variants in this enum
6 |     A { foo: String },
  |     ^
7 |     B { bar: i32 },
  |     ^

warning: field `foo` is never read
  --> crates/specta/tests/ts_rs/union_with_internal_tag.rs:12:5
   |
11 | struct InnerA {
   |        ------ field in this struct
12 |     foo: String,
   |     ^^^

warning: field `bar` is never read
  --> crates/specta/tests/ts_rs/union_with_internal_tag.rs:17:5
   |
16 | struct InnerB {
   |        ------ field in this struct
17 |     bar: i32,
   |     ^^^

warning: variants `A` and `B` are never constructed
  --> crates/specta/tests/ts_rs/union_with_internal_tag.rs:23:5
   |
22 | enum EnumWithInternalTag2 {
   |      -------------------- variants in this enum
23 |     A(InnerA),
   |     ^
24 |     B(InnerB),
   |     ^

warning: unused `MutexGuard` that must be used
 --> crates/specta/tests/lib.rs:9:5
  |
9 |     dbg!(types);
  |     ^^^^^^^^^^^
  |
  = note: `#[warn(unused_must_use)]` on by default
  = note: if unused the Mutex will immediately unlock
  = note: this warning originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `specta` (test "lib") generated 28 warnings (2 duplicates)
    Finished test [unoptimized + debuginfo] target(s) in 1.68s
     Running unittests src/lib.rs (/Users/brendonovich/github.com/oscartbeaumont/rspc/target/debug/deps/specta-5d5931ce5a49b9cf)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/fail.rs (/Users/brendonovich/github.com/oscartbeaumont/rspc/target/debug/deps/fail-1e6263c10c908a15)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/lib.rs (/Users/brendonovich/github.com/oscartbeaumont/rspc/target/debug/deps/lib-9389eccdda5b69cb)

running 1 test
[crates/specta/tests/lib.rs:9] types = {
    "A": Object(
        ObjectType {
            name: "A",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "b",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 750914932976793915,
                },
            ),
        },
    ),
    "B": Object(
        ObjectType {
            name: "B",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Object(
                        ObjectType {
                            name: "A",
                            generics: [],
                            fields: [
                                ObjectField {
                                    name: "a",
                                    ty: Primitive(
                                        i32,
                                    ),
                                    optional: false,
                                    flatten: false,
                                },
                                ObjectField {
                                    name: "b",
                                    ty: Primitive(
                                        i32,
                                    ),
                                    optional: false,
                                    flatten: false,
                                },
                            ],
                            tag: None,
                            type_id: Some(
                                TypeId {
                                    t: 750914932976793915,
                                },
                            ),
                        },
                    ),
                    optional: false,
                    flatten: true,
                },
                ObjectField {
                    name: "c",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 12025066373484523988,
                },
            ),
        },
    ),
    "Bar": Object(
        ObjectType {
            name: "Bar",
            generics: [],
            fields: [
                ObjectField {
                    name: "field",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 1929791689953974691,
                },
            ),
        },
    ),
    "C": Object(
        ObjectType {
            name: "C",
            generics: [],
            fields: [
                ObjectField {
                    name: "b",
                    ty: Object(
                        ObjectType {
                            name: "B",
                            generics: [],
                            fields: [
                                ObjectField {
                                    name: "a",
                                    ty: Object(
                                        ObjectType {
                                            name: "A",
                                            generics: [],
                                            fields: [
                                                ObjectField {
                                                    name: "a",
                                                    ty: Primitive(
                                                        i32,
                                                    ),
                                                    optional: false,
                                                    flatten: false,
                                                },
                                                ObjectField {
                                                    name: "b",
                                                    ty: Primitive(
                                                        i32,
                                                    ),
                                                    optional: false,
                                                    flatten: false,
                                                },
                                            ],
                                            tag: None,
                                            type_id: Some(
                                                TypeId {
                                                    t: 750914932976793915,
                                                },
                                            ),
                                        },
                                    ),
                                    optional: false,
                                    flatten: true,
                                },
                                ObjectField {
                                    name: "c",
                                    ty: Primitive(
                                        i32,
                                    ),
                                    optional: false,
                                    flatten: false,
                                },
                            ],
                            tag: None,
                            type_id: Some(
                                TypeId {
                                    t: 12025066373484523988,
                                },
                            ),
                        },
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "d",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 2320839660704323191,
                },
            ),
        },
    ),
    "ComplexEnum": Enum(
        EnumType {
            name: "ComplexEnum",
            variants: [
                Unit(
                    "A",
                ),
                Named(
                    ObjectType {
                        name: "B",
                        generics: [],
                        fields: [
                            ObjectField {
                                name: "foo",
                                ty: Primitive(
                                    String,
                                ),
                                optional: false,
                                flatten: false,
                            },
                            ObjectField {
                                name: "bar",
                                ty: Primitive(
                                    f64,
                                ),
                                optional: false,
                                flatten: false,
                            },
                        ],
                        tag: None,
                        type_id: None,
                    },
                ),
                Unnamed(
                    TupleType {
                        name: "W",
                        fields: [
                            Reference {
                                name: "SimpleEnum",
                                generics: [],
                                type_id: TypeId {
                                    t: 8985174442706331887,
                                },
                            },
                        ],
                        generics: [],
                    },
                ),
                Named(
                    ObjectType {
                        name: "F",
                        generics: [],
                        fields: [
                            ObjectField {
                                name: "nested",
                                ty: Reference {
                                    name: "SimpleEnum",
                                    generics: [],
                                    type_id: TypeId {
                                        t: 8985174442706331887,
                                    },
                                },
                                optional: false,
                                flatten: false,
                            },
                        ],
                        tag: None,
                        type_id: None,
                    },
                ),
                Unnamed(
                    TupleType {
                        name: "T",
                        fields: [
                            Primitive(
                                i32,
                            ),
                            Reference {
                                name: "SimpleEnum",
                                generics: [],
                                type_id: TypeId {
                                    t: 8985174442706331887,
                                },
                            },
                        ],
                        generics: [],
                    },
                ),
            ],
            generics: [],
            repr: Adjacent {
                tag: "kind",
                content: "data",
            },
            type_id: TypeId {
                t: 3624664374062685067,
            },
        },
    ),
    "Empty": Enum(
        EnumType {
            name: "Empty",
            variants: [],
            generics: [],
            repr: External,
            type_id: TypeId {
                t: 1048774970996825752,
            },
        },
    ),
    "EnumWithInternalTag": Enum(
        EnumType {
            name: "EnumWithInternalTag",
            variants: [
                Named(
                    ObjectType {
                        name: "A",
                        generics: [],
                        fields: [
                            ObjectField {
                                name: "foo",
                                ty: Primitive(
                                    String,
                                ),
                                optional: false,
                                flatten: false,
                            },
                        ],
                        tag: None,
                        type_id: None,
                    },
                ),
                Named(
                    ObjectType {
                        name: "B",
                        generics: [],
                        fields: [
                            ObjectField {
                                name: "bar",
                                ty: Primitive(
                                    i32,
                                ),
                                optional: false,
                                flatten: false,
                            },
                        ],
                        tag: None,
                        type_id: None,
                    },
                ),
            ],
            generics: [],
            repr: Internal {
                tag: "type",
            },
            type_id: TypeId {
                t: 17947891422705313774,
            },
        },
    ),
    "EnumWithInternalTag2": Enum(
        EnumType {
            name: "EnumWithInternalTag2",
            variants: [
                Unnamed(
                    TupleType {
                        name: "A",
                        fields: [
                            Reference {
                                name: "InnerA",
                                generics: [],
                                type_id: TypeId {
                                    t: 5711295393016056568,
                                },
                            },
                        ],
                        generics: [],
                    },
                ),
                Unnamed(
                    TupleType {
                        name: "B",
                        fields: [
                            Reference {
                                name: "InnerB",
                                generics: [],
                                type_id: TypeId {
                                    t: 17479291429173155810,
                                },
                            },
                        ],
                        generics: [],
                    },
                ),
            ],
            generics: [],
            repr: Internal {
                tag: "type",
            },
            type_id: TypeId {
                t: 3357471371448188187,
            },
        },
    ),
    "FlattenEnum": Enum(
        EnumType {
            name: "FlattenEnum",
            variants: [
                Unit(
                    "One",
                ),
                Unit(
                    "Two",
                ),
                Unit(
                    "Three",
                ),
            ],
            generics: [],
            repr: Adjacent {
                tag: "tag",
                content: "test",
            },
            type_id: TypeId {
                t: 8433634025217685403,
            },
        },
    ),
    "FlattenEnumStruct": Object(
        ObjectType {
            name: "FlattenEnumStruct",
            generics: [],
            fields: [
                ObjectField {
                    name: "outer",
                    ty: Primitive(
                        String,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "inner",
                    ty: Enum(
                        EnumType {
                            name: "FlattenEnum",
                            variants: [
                                Unit(
                                    "One",
                                ),
                                Unit(
                                    "Two",
                                ),
                                Unit(
                                    "Three",
                                ),
                            ],
                            generics: [],
                            repr: Adjacent {
                                tag: "tag",
                                content: "test",
                            },
                            type_id: TypeId {
                                t: 8433634025217685403,
                            },
                        },
                    ),
                    optional: false,
                    flatten: true,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 4029405122904306446,
                },
            ),
        },
    ),
    "Foo": Object(
        ObjectType {
            name: "Foo",
            generics: [],
            fields: [
                ObjectField {
                    name: "bar",
                    ty: Reference {
                        name: "Bar",
                        generics: [],
                        type_id: TypeId {
                            t: 1929791689953974691,
                        },
                    },
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 3719058722927215204,
                },
            ),
        },
    ),
    "GenericStruct": Object(
        ObjectType {
            name: "GenericStruct",
            generics: [
                "T",
            ],
            fields: [
                ObjectField {
                    name: "arg",
                    ty: Generic(
                        "T",
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 6543249795926332001,
                },
            ),
        },
    ),
    "HasBeenRenamed": Tuple(
        TupleType {
            name: "HasBeenRenamed",
            fields: [],
            generics: [],
        },
    ),
    "HasGenericAlias": Tuple(
        TupleType {
            name: "HasGenericAlias",
            fields: [
                Record(
                    (
                        Primitive(
                            String,
                        ),
                        Primitive(
                            String,
                        ),
                    ),
                ),
            ],
            generics: [],
        },
    ),
    "InlineStruct": Object(
        ObjectType {
            name: "InlineStruct",
            generics: [],
            fields: [
                ObjectField {
                    name: "ref_struct",
                    ty: Reference {
                        name: "SimpleStruct",
                        generics: [],
                        type_id: TypeId {
                            t: 14888667124265345445,
                        },
                    },
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "val",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 8668683199395384789,
                },
            ),
        },
    ),
    "InlinerStruct": Object(
        ObjectType {
            name: "InlinerStruct",
            generics: [],
            fields: [
                ObjectField {
                    name: "inline_this",
                    ty: Object(
                        ObjectType {
                            name: "InlineStruct",
                            generics: [],
                            fields: [
                                ObjectField {
                                    name: "ref_struct",
                                    ty: Reference {
                                        name: "SimpleStruct",
                                        generics: [],
                                        type_id: TypeId {
                                            t: 14888667124265345445,
                                        },
                                    },
                                    optional: false,
                                    flatten: false,
                                },
                                ObjectField {
                                    name: "val",
                                    ty: Primitive(
                                        i32,
                                    ),
                                    optional: false,
                                    flatten: false,
                                },
                            ],
                            tag: None,
                            type_id: Some(
                                TypeId {
                                    t: 8668683199395384789,
                                },
                            ),
                        },
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "dont_inline_this",
                    ty: Reference {
                        name: "RefStruct",
                        generics: [],
                        type_id: TypeId {
                            t: 933164510555579913,
                        },
                    },
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 10289672307761372124,
                },
            ),
        },
    ),
    "InnerA": Object(
        ObjectType {
            name: "InnerA",
            generics: [],
            fields: [
                ObjectField {
                    name: "foo",
                    ty: Primitive(
                        String,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 5711295393016056568,
                },
            ),
        },
    ),
    "InnerB": Object(
        ObjectType {
            name: "InnerB",
            generics: [],
            fields: [
                ObjectField {
                    name: "bar",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 17479291429173155810,
                },
            ),
        },
    ),
    "Interface": Object(
        ObjectType {
            name: "Interface",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: List(
                        Primitive(
                            i32,
                        ),
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 17798245179075220418,
                },
            ),
        },
    ),
    "List": Object(
        ObjectType {
            name: "List",
            generics: [],
            fields: [
                ObjectField {
                    name: "data",
                    ty: Nullable(
                        List(
                            Primitive(
                                u32,
                            ),
                        ),
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 8132359512205201151,
                },
            ),
        },
    ),
    "NewType": Tuple(
        TupleType {
            name: "NewType",
            fields: [
                Primitive(
                    String,
                ),
            ],
            generics: [],
        },
    ),
    "Newtype": Tuple(
        TupleType {
            name: "Newtype",
            fields: [
                List(
                    Primitive(
                        i32,
                    ),
                ),
            ],
            generics: [],
        },
    ),
    "Optional": Object(
        ObjectType {
            name: "Optional",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Nullable(
                        Primitive(
                            i32,
                        ),
                    ),
                    optional: true,
                    flatten: false,
                },
                ObjectField {
                    name: "b",
                    ty: Nullable(
                        Primitive(
                            String,
                        ),
                    ),
                    optional: true,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 13392103259153749784,
                },
            ),
        },
    ),
    "RefStruct": Tuple(
        TupleType {
            name: "RefStruct",
            fields: [
                Reference {
                    name: "TestEnum",
                    generics: [],
                    type_id: TypeId {
                        t: 15261318352278168540,
                    },
                },
            ],
            generics: [],
        },
    ),
    "Rename": Object(
        ObjectType {
            name: "Rename",
            generics: [],
            fields: [
                ObjectField {
                    name: "A",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "B",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 3825089205231796193,
                },
            ),
        },
    ),
    "RenameSerdeSpecialChar": Object(
        ObjectType {
            name: "RenameSerdeSpecialChar",
            generics: [],
            fields: [
                ObjectField {
                    name: "a/b",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 7081800805540055196,
                },
            ),
        },
    ),
    "Simple": Object(
        ObjectType {
            name: "Simple",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "b",
                    ty: Primitive(
                        String,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "c",
                    ty: Tuple(
                        TupleType {
                            name: "(T10, T11, T12)",
                            fields: [
                                Primitive(
                                    i32,
                                ),
                                Primitive(
                                    String,
                                ),
                                Primitive(
                                    i32,
                                ),
                            ],
                            generics: [],
                        },
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "d",
                    ty: List(
                        Primitive(
                            String,
                        ),
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "e",
                    ty: Nullable(
                        Primitive(
                            String,
                        ),
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 15039002076374458873,
                },
            ),
        },
    ),
    "SimpleEnum": Enum(
        EnumType {
            name: "SimpleEnum",
            variants: [
                Unit(
                    "A",
                ),
                Unit(
                    "B",
                ),
            ],
            generics: [],
            repr: Adjacent {
                tag: "kind",
                content: "d",
            },
            type_id: TypeId {
                t: 8985174442706331887,
            },
        },
    ),
    "SimpleStruct": Object(
        ObjectType {
            name: "SimpleStruct",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "b",
                    ty: Primitive(
                        String,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "c",
                    ty: Tuple(
                        TupleType {
                            name: "(T10, T11, T12)",
                            fields: [
                                Primitive(
                                    i32,
                                ),
                                Primitive(
                                    String,
                                ),
                                Primitive(
                                    i32,
                                ),
                            ],
                            generics: [],
                        },
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "d",
                    ty: List(
                        Primitive(
                            String,
                        ),
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "e",
                    ty: Nullable(
                        Primitive(
                            String,
                        ),
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 14888667124265345445,
                },
            ),
        },
    ),
    "Skip": Object(
        ObjectType {
            name: "Skip",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "b",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 5336800028658683976,
                },
            ),
        },
    ),
    "TaggedType": Object(
        ObjectType {
            name: "TaggedType",
            generics: [],
            fields: [
                ObjectField {
                    name: "a",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "b",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: Some(
                "type",
            ),
            type_id: Some(
                TypeId {
                    t: 4246613821111775286,
                },
            ),
        },
    ),
    "TestEnum": Enum(
        EnumType {
            name: "TestEnum",
            variants: [
                Unit(
                    "Unit",
                ),
                Unnamed(
                    TupleType {
                        name: "Single",
                        fields: [
                            Primitive(
                                i32,
                            ),
                        ],
                        generics: [],
                    },
                ),
                Unnamed(
                    TupleType {
                        name: "Multiple",
                        fields: [
                            Primitive(
                                i32,
                            ),
                            Primitive(
                                i32,
                            ),
                        ],
                        generics: [],
                    },
                ),
                Named(
                    ObjectType {
                        name: "Struct",
                        generics: [],
                        fields: [
                            ObjectField {
                                name: "a",
                                ty: Primitive(
                                    i32,
                                ),
                                optional: false,
                                flatten: false,
                            },
                        ],
                        tag: None,
                        type_id: None,
                    },
                ),
            ],
            generics: [],
            repr: External,
            type_id: TypeId {
                t: 15261318352278168540,
            },
        },
    ),
    "TupleNewType": Tuple(
        TupleType {
            name: "TupleNewType",
            fields: [
                Primitive(
                    String,
                ),
                Primitive(
                    i32,
                ),
                Tuple(
                    TupleType {
                        name: "(T11, T12)",
                        fields: [
                            Primitive(
                                i32,
                            ),
                            Primitive(
                                i32,
                            ),
                        ],
                        generics: [],
                    },
                ),
            ],
            generics: [],
        },
    ),
    "TupleStruct1": Tuple(
        TupleType {
            name: "TupleStruct1",
            fields: [
                Primitive(
                    i32,
                ),
            ],
            generics: [],
        },
    ),
    "TupleStruct3": Tuple(
        TupleType {
            name: "TupleStruct3",
            fields: [
                Primitive(
                    i32,
                ),
                Primitive(
                    bool,
                ),
                Primitive(
                    String,
                ),
            ],
            generics: [],
        },
    ),
    "Unit": Tuple(
        TupleType {
            name: "Unit",
            fields: [],
            generics: [],
        },
    ),
    "Unit2": Object(
        ObjectType {
            name: "Unit2",
            generics: [],
            fields: [],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 15525123723470215641,
                },
            ),
        },
    ),
    "Unit3": Tuple(
        TupleType {
            name: "Unit3",
            fields: [],
            generics: [],
        },
    ),
    "Untagged": Enum(
        EnumType {
            name: "Untagged",
            variants: [
                Unnamed(
                    TupleType {
                        name: "Foo",
                        fields: [
                            Primitive(
                                String,
                            ),
                        ],
                        generics: [],
                    },
                ),
                Unnamed(
                    TupleType {
                        name: "Bar",
                        fields: [
                            Primitive(
                                i32,
                            ),
                        ],
                        generics: [],
                    },
                ),
                Unit(
                    "None",
                ),
            ],
            generics: [],
            repr: Untagged,
            type_id: TypeId {
                t: 13747310528878539129,
            },
        },
    ),
    "r#enum": Object(
        ObjectType {
            name: "r#enum",
            generics: [],
            fields: [
                ObjectField {
                    name: "type",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "use",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "struct",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "let",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
                ObjectField {
                    name: "enum",
                    ty: Primitive(
                        i32,
                    ),
                    optional: false,
                    flatten: false,
                },
            ],
            tag: None,
            type_id: Some(
                TypeId {
                    t: 5026156178248508407,
                },
            ),
        },
    ),
}
test export_types ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 24 filtered out; finished in 0.04s

     Running tests/typescript.rs (/Users/brendonovich/github.com/oscartbeaumont/rspc/target/debug/deps/typescript-bd9a4e10e6eee7bf)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 0.00s

